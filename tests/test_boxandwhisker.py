#!/usr/bin/env python
import random
import unittest
from boomslang import BoxAndWhisker, Plot
from ImageComparisonTestCase import ImageComparisonTestCase

class BoxAndWhiskerTest(ImageComparisonTestCase, unittest.TestCase):
    def __init__(self, testCaseName):
        super(BoxAndWhiskerTest,self).__init__(testCaseName)
        self.imageName = "boxandwhisker.png"

    def constructImage(self):
        bnw = BoxAndWhisker()
        bnw.label="Whiskers"

        sequences = [
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],

            [3, 8, 9, 5, 6, 8, 5, 9, 4, 2, 2, 5, 9, 8, 6, 2, 5, 2, 6, 9, 5, 5,
             6, 4, 9, 5, 3, 6, 6, 8, 9, 2, 9, 1, 4, 9, 2, 5, 7, 7, 8, 2, 3, 7,
             2, 1, 8, 3, 9, 9, 6, 7, 5, 2, 1, 9, 9, 5, 4, 5, 3, 9, 4, 3, 5, 2,
             6, 8, 7, 1, 1, 9, 4, 9, 2, 8, 5, 9, 9, 9, 4, 9, 4, 8, 1, 2, 8, 6,
             6, 9, 7, 9, 3, 5, 4, 7, 7, 9, 5, 4],

            [14, 9, 5, 1, 7, 14, 6, 5, 3, 4, 19, 5, 4, 13, 14, 10, 1, 7, 15, 5,
             2, 1, 14, 10, 15, 2, 1, 2, 17, 15, 15, 5, 15, 7, 3, 8, 11, 17, 4,
             11, 14, 12, 4, 1, 19, 3, 2, 2, 11, 11, 4, 11, 10, 16, 3, 11, 5,
             12, 6, 17, 13, 4, 12, 1, 2, 9, 11, 19, 4, 16, 10, 6, 8, 18, 9, 12,
             14, 14, 16, 16, 13, 13, 12, 19, 2, 4, 12, 8, 10, 4, 13, 16, 4, 9,
             12, 17, 11, 18, 5, 14],

            [23, 7, 14, 5, 10, 15, 14, 17, 27, 16, 3, 7, 10, 21, 8, 17, 20, 24,
             19, 9, 20, 14, 1, 8, 10, 26, 28, 3, 13, 2, 7, 1, 18, 24, 25, 27,
             2, 14, 27, 10, 22, 28, 12, 1, 14, 4, 13, 10, 14, 26, 21, 13, 4, 5,
             1, 16, 15, 9, 19, 24, 29, 4, 27, 19, 17, 1, 21, 23, 28, 28, 3, 28,
             21, 22, 1, 14, 28, 28, 2, 16, 24, 21, 2, 27, 5, 9, 14, 20, 7, 20,
             16, 13, 11, 17, 27, 22, 19, 28, 6, 25],

            [3, 36, 4, 3, 14, 13, 14, 36, 19, 24, 38, 32, 26, 14, 25, 25, 16,
             14, 19, 10, 5, 15, 37, 10, 4, 20, 6, 29, 22, 20, 14, 10, 17, 37,
             26, 4, 13, 32, 18, 27, 7, 35, 20, 2, 2, 11, 18, 17, 18, 8, 36, 22,
             39, 12, 6, 2, 21, 1, 33, 3, 30, 25, 1, 6, 17, 38, 22, 20, 20, 21,
             34, 19, 14, 13, 10, 30, 39, 8, 30, 25, 37, 6, 33, 10, 32, 17, 6,
             32, 5, 34, 27, 21, 29, 15, 3, 30, 15, 28, 15, 37],

            [43, 4, 5, 29, 17, 10, 7, 31, 12, 9, 33, 42, 6, 43, 25, 32, 9, 4,
             42, 25, 37, 45, 23, 6, 46, 1, 49, 8, 39, 34, 31, 14, 42, 49, 37,
             40, 6, 37, 27, 36, 4, 45, 30, 14, 19, 38, 28, 43, 14, 24, 36, 43,
             18, 36, 36, 12, 31, 44, 43, 21, 42, 3, 2, 13, 37, 47, 9, 12, 35,
             46, 45, 14, 24, 20, 42, 3, 9, 8, 46, 32, 11, 24, 36, 47, 11, 39,
             31, 6, 34, 48, 45, 38, 27, 42, 5, 30, 19, 20, 18, 9],

            [22, 57, 14, 54, 52, 54, 2, 47, 5, 9, 47, 55, 27, 41, 6, 23, 58,
             23, 28, 17, 16, 12, 6, 47, 12, 36, 28, 15, 49, 42, 6, 23, 6, 34,
             31, 36, 11, 38, 31, 42, 30, 18, 30, 40, 12, 16, 52, 23, 47, 10,
             19, 15, 28, 20, 18, 35, 21, 29, 25, 41, 15, 34, 2, 11, 58, 15, 22,
             17, 16, 49, 43, 30, 1, 30, 33, 46, 25, 21, 20, 42, 42, 44, 21, 3,
             41, 44, 52, 52, 8, 50, 41, 3, 12, 19, 53, 47, 26, 2, 49, 14],

            [53, 9, 51, 39, 36, 61, 61, 20, 35, 4, 43, 18, 46, 61, 8, 51, 26,
             5, 8, 2, 49, 33, 35, 22, 5, 59, 65, 16, 44, 60, 43, 4, 54, 48, 1,
             48, 43, 28, 60, 49, 39, 39, 37, 57, 32, 68, 8, 51, 38, 25, 1, 28,
             16, 60, 2, 42, 58, 8, 49, 59, 59, 64, 63, 44, 26, 20, 18, 52, 64,
             58, 35, 53, 30, 69, 6, 58, 5, 15, 20, 43, 61, 19, 57, 45, 51, 23,
             67, 55, 21, 33, 30, 1, 41, 35, 61, 24, 42, 24, 18, 57],

            [12, 29, 23, 7, 24, 26, 65, 38, 73, 11, 72, 23, 68, 28, 2, 52, 33,
             50, 51, 29, 24, 18, 24, 23, 63, 65, 71, 30, 27, 19, 11, 24, 55,
             64, 51, 64, 21, 15, 2, 39, 16, 59, 31, 44, 25, 46, 33, 20, 53, 24,
             45, 64, 10, 67, 69, 29, 12, 59, 27, 41, 77, 61, 8, 24, 15, 66, 71,
             75, 65, 56, 58, 63, 33, 63, 17, 1, 41, 17, 7, 38, 65, 44, 76, 21,
             38, 46, 38, 15, 52, 69, 69, 50, 32, 46, 11, 59, 26, 14, 68, 57],

            [17, 37, 8, 75, 88, 15, 4, 57, 12, 68, 37, 54, 75, 39, 39, 36, 66,
             75, 46, 80, 14, 54, 83, 2, 28, 13, 66, 51, 84, 63, 66, 83, 66, 76,
             48, 61, 46, 53, 36, 12, 16, 68, 3, 21, 38, 18, 75, 34, 2, 17, 25,
             33, 16, 16, 59, 47, 16, 75, 60, 73, 44, 61, 9, 43, 18, 38, 67, 67,
             89, 43, 78, 89, 37, 22, 33, 77, 79, 71, 45, 71, 49, 80, 83, 53,
             62, 29, 88, 84, 71, 14, 69, 21, 75, 56, 55, 79, 31, 75, 30, 42]
            ]

        xSequence = []

        for i in range(10):
            xSequence.append(sequences[i])

        bnw.xSequence = xSequence

        plot = Plot()
        plot.hasLegend()
        plot.add(bnw)
        plot.save(self.imageName)


ImageComparisonTestCase.register(BoxAndWhiskerTest)

if __name__ == "__main__":
    test = BoxAndWhiskerTest()

    test.constructImage()
